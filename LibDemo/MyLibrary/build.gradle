plugins {
    id 'com.android.library'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 31
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

//Copy类型
task makeJar(type: Copy) {
    //删除已存在的
    delete 'build/libs/MyLibrary.jar'
    //设置拷贝的文件
    //from('build/intermediates/aar_main_jar/debug/')
    from('build/intermediates/aar_main_jar/release/')
    //将classes.jar放入build/libs/目录下
    into('build/libs/')
    //include ,exclude参数来设置过滤，只关心classes.jar这个文件
    include('classes.jar')
    //重命名
    rename('classes.jar', 'MyLibrary.jar')
}

//在终端执行：gradlew makeJar，生成JAR包
makeJar.dependsOn(build)
